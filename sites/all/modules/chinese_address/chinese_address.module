<?php

/**
 * @file
 * Chinese address main module file.
 */

const CHINESE_ADDRESS_ROOT_INDEX = 1;
const CHINESE_ADDRESS_NULL_INDEX = 0;
const CHINESE_ADDRESS_NAME_HIDE = "市辖区";

/**
 */
function chinese_address_element_info() {
  $types['chinese_address'] = array(
    '#input' => TRUE,
    '#tree' => TRUE,
    '#title_display' => 'before',
    '#theme_wrappers' => array(
      'form_element',
      'chinese_address_element',
    ),
    '#default_value' => array(
      'province' => CHINESE_ADDRESS_NULL_INDEX,
    ),
    '#province_limit'=>array(),
    '#process' => array(
      '_chinese_address_element_process',
    ),
    '#element_validate' => array(
      '_chinese_address_form_element_validate',
    ),
    '#has_street' => TRUE,
    '#has_detail' => TRUE,
    '#province_limit'=>array(),
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'chinese_address') . '/assets/css/chinese_address.css',
      ),
    ),
  );
  return $types;
}

/**
 */
function chinese_address_theme() {
  return array(
    'chinese_address_element' => array(
      'render element' => 'element',
    ),
    'chinese_address' => array(
      'variables' => array(
        'address' => array(),
      ),
      'template' => 'chinese-address',
    ),
  );
}

/**
 */
function chinese_address_field_info() {
  return array(
    'chinese_address' => array(
      'label' => t('Chinese Address'),
      'description' => t('This field stores Chinese  province, city, and county.'),
      'settings' => array(
        'has_detail' => TRUE,
        'has_street' => TRUE,
        'province_limit' =>array(),
      ),
      'default_widget' => 'chinese_address_default',
      'default_formatter' => 'chinese_address_default',
    ),
  );
}

/**
 */
function chinese_address_field_formatter_info() {
  return array(
    // This formatter just displays the hex value in the color
    // indicated.
    'chinese_address_default' => array(
      'label' => t('Chinese Address  Formatter'),
      'settings' => array(
        'has_province' => TRUE,
       'has_city' => TRUE,
       'has_county' => TRUE,
       'has_street' => TRUE,
       'has_detail' => TRUE,
      ),
      'field types' => array(
        'chinese_address',
      ),
    ),
  );
}

/**
 */
function chinese_address_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];
 
  switch ($display['type']) {
    case 'chinese_address_default':
      foreach ($items as $delta => $item) {
        $address_names = _chinese_address_get_region_index($item);
        $address = array();
        $address['province'] = $settings['has_province'] &&($item['province'] != CHINESE_ADDRESS_NULL_INDEX) ? $address_names[$item['province']] : '';
        $address['city'] = $settings['has_city'] && ($item['city'] != CHINESE_ADDRESS_NULL_INDEX) ? $address_names[$item['city']] : '';
        $address['county'] = $settings['has_county'] && ($item['county'] != CHINESE_ADDRESS_NULL_INDEX) && $item['county'] ? $address_names[$item['county']] : '';
        $address['street'] = $settings['has_street'] && ($item['street'] != CHINESE_ADDRESS_NULL_INDEX) && $item['street'] ? $address_names[$item['street']] : '';
        $address['detail'] = $settings['has_detail'] && isset($item['detail']) ? $item['detail'] : '';

        $element[$delta] = array(
          '#markup' =>implode($address)
        );
      }
      break;
  }
  return $element;
}

/**
 */
function chinese_address_field_is_empty($item, $field) {
  if ($field['type'] == 'chinese_address') {
    if ( (int) $item['province'] ==CHINESE_ADDRESS_NULL_INDEX  &&   (int) $item['city'] ==  CHINESE_ADDRESS_NULL_INDEX  && (int) $item['county'] ==CHINESE_ADDRESS_NULL_INDEX  && (int) $item['street'] ==CHINESE_ADDRESS_NULL_INDEX) {
      return TRUE;
    }       
  }
  return FALSE;
}

/**
 */
function chinese_address_field_widget_info() {
  return array(
    'chinese_address_default' => array(
      'label' => t('Select list'),
      'field types' => array(
        'chinese_address',
      ),
    ),
  );
}

/**
 */
function chinese_address_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $widget = $element;
  $settings = $field['settings'];
  switch ($instance['widget']['type']) {
    case 'chinese_address_default':
      $address_value = array();
      if ($items && isset($items[$delta])) {
        $address_value = $items[$delta];
      }
      if ($address_value) {
        $widget += [
          '#default_value' => $address_value,
        ];
      }
      $widget += array(
        '#type' => 'chinese_address',
        '#has_detail' => $settings['has_detail'],
        '#has_street' => $settings['has_street'],
      '#province_limit' => $settings['province_limit'],
       '#required' => $instance['required'],
      );
      break;
  }

  return $widget;
}

/**
 */
function chinese_address_field_settings_form($field, $instance, $has_data) {
  $form = array();

  $settings = $field['settings'];  
  switch ($field['type']) {
    case 'chinese_address':
      $form['has_street'] = array(
      '#title' => t('Need Street Field?'),
      '#type' => 'checkbox',
      '#default_value' => $settings['has_street'],
      );
      $form['has_detail'] = array(
        '#title' => t('Need Detail Field?'),
        '#type' => 'checkbox',
        '#default_value' => $settings['has_detail'],
      );
      $form['province_limit'] = array(
      '#title' => t('Limit Province?'),
      '#type' => 'select',
      '#options' =>  _chinese_address_get_location(CHINESE_ADDRESS_ROOT_INDEX, TRUE),
      '#default_value' => $settings['province_limit'],
     "#multiple" => TRUE,
      '#description'=>t('如果限定为一个,那省份的选项则会被隐藏,按住CTRL进行多选,若要所有地区则留空'),
      );
     
      break;
  }
  return $form;
}

/**
 */
function chinese_address_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  if ($display['type'] == 'chinese_address_default') {
    $element['has_province'] = array(
      '#type' => 'checkbox',
      '#title' => t('Has Province'),
      '#default_value' => $settings['has_province'],
    );
    $element['has_city'] = array(
      '#type' => 'checkbox',
      '#title' => t('Has City'),
      '#default_value' => $settings['has_city'],
    );
    $element['has_county'] = array(
      '#type' => 'checkbox',
      '#title' => t('Has County'),
      '#default_value' => $settings['has_county'],
    );
    $element['has_street'] = array(
      '#type' => 'checkbox',
      '#title' => t('Has Street'),
      '#default_value' => $settings['has_street'],
    );

    $element['has_detail'] = array(
      '#type' => 'checkbox',
      '#title' => t('Has Detail'),
      '#default_value' => $settings['has_detail'],
    );
  }
  return $element;
}

/**
 */
function chinese_address_field_formatter_settings_summary($field, $instance, $view_mode) {
  return 'Settings';
}

/**
 */
function _chinese_address_element_process($element, $form_state, $complete_form) {
  $parents = $element['#parents'];
  $province_limit = $element['#province_limit'];
  $address_value = drupal_array_get_nested_value($form_state['input'], $parents);
  if (!$address_value) {
    $address_value = $element['#value'];
  }
  $address_value += array(
  'province' => CHINESE_ADDRESS_NULL_INDEX,
  'city' => CHINESE_ADDRESS_NULL_INDEX,
  'county' => CHINESE_ADDRESS_NULL_INDEX,
  'street' => CHINESE_ADDRESS_NULL_INDEX,
   'detail' => '',
  );
  //province
  $province = _chinese_address_get_location(CHINESE_ADDRESS_ROOT_INDEX, FALSE,$province_limit);
  $provinceAccess = count($province) >  2 ;
  if(!$provinceAccess) {
    end($province);
    $address_value['province'] =  key($province);
  }
  
  //city
  $city = _chinese_address_get_location($address_value['province'],$provinceAccess);
 $filterCity=_chinese_address_filter_none_option($city);
 if( count($filterCity) > 1)
   $cityAccess  = TRUE;
   else
   $cityAccess = FALSE;
   
   if($provinceAccess  || count($filterCity)== 1 ) {
     if ($address_value['city']==CHINESE_ADDRESS_NULL_INDEX  || !array_key_exists($address_value['city'], $filterCity)) {
       $address_value['city'] = key($filterCity);
        }
   }
    

//county
   if(!$provinceAccess && !$cityAccess) {
     $excludeNoneCounty= FALSE ;
     $countyCompare =1 ;
   }
   else {
     $excludeNoneCounty= TRUE ;
     $countyCompare =0 ;
   }
   
   $county = _chinese_address_get_location($address_value['city'], $excludeNoneCounty);
   $filterCounty=_chinese_address_filter_none_option($county);
   
   if (($provinceAccess ||$cityAccess)  && ($address_value['county']  ==CHINESE_ADDRESS_NULL_INDEX  || !array_key_exists($address_value['county'], $county))) {
    $address_value['county'] = key($county);
  }
  if(count($county) > $countyCompare)
       $countyAccess = TRUE;
    else
     $countyAccess = FALSE;

     
   //street
     $street = _chinese_address_get_location($address_value['county'],true);
  if ($address_value['street'] ==CHINESE_ADDRESS_NULL_INDEX  || !array_key_exists($address_value['street'], $street)) {
    $address_value['street'] = key($street);
  }
  if(!$element['#has_street'])
     $streetAccess= FALSE;
  else 
    $streetAccess = !empty($street) ;
   
    
    //detail
    if(!$element['#has_detail'])
         $detailAccess = FALSE;
    else {
      if($element['#has_street'])
           $detailAccess= !empty($street);
      else 
        $detailAccess= !empty($county);
    }
    
    
  $element['province'] = array(
    '#type' => 'select',
    '#theme_wrappers' => array(),
    '#access' => $provinceAccess,
    '#attributes' => array(
      'class' => array(
        'chinese-address-province',
      ),
    ),
    '#default_value' => $address_value['province'],
    '#options' => $province,
    '#ajax' => array(
      'callback' => '_chinese_address_change_callback',
      'wrapper' => $element['#id'],
      'progress' => array(
        'type' => 'none',
      ),
    ),
  );

  $element['city'] = array(
    '#type' => 'select',
    '#access' => $cityAccess,
    '#validated' => TRUE,
    '#theme_wrappers' => array(),
    '#options' => $city,
    '#value' => $address_value['city'],
    '#attributes' => array(
      'class' => array(
        'chinese-address-city',
      ),

    ),
    '#ajax' => array(
      'callback' => '_chinese_address_change_callback',
      'wrapper' => $element['#id'],
      'progress' => array(
        'type' => 'none',
      ),
    ),
  );

  $element['county'] = array(
    '#type' => 'select',
    '#theme_wrappers' => array(),
    "#access" => !empty($county),
    '#options' => $county,
    '#validated' => TRUE,
    '#default_value' => $address_value['county'],
    '#ajax' => array(
      'callback' => '_chinese_address_change_callback',
      'wrapper' => $element['#id'],
      'progress' => array(
        'type' => 'none',
      ),
    ),
    '#attributes' => array(
      'class' => array(
        'chinese-address-county',
      ),
    ),
  );

  $element['street'] = array(
    '#type' => 'select',
    '#theme_wrappers' => array(),
    "#access" => $streetAccess,
    '#options' => $street,
    '#validated' => TRUE,
    '#default_value' => $address_value['street'],
    '#attributes' => array(
      'class' => array(
        'chinese-address-street',
      ),
    ),
  );


    $element['detail'] = array(
      '#type' => 'textfield',
      '#access' =>$detailAccess,
      '#theme_wrappers' => array(),
      '#size' => 20,
      '#default_value' => $address_value['detail'],
      '#maxlength' => 60,
      '#attributes' => array(
        'class' => array(
          'chinese-address-detail',
        ),
      ),
    );


  return $element;
}

/**
 */
function theme_chinese_address_element($variables) {
  $element = $variables['element'];
  element_set_attributes(
        $element, array(
          'id',
        )
    );
  _form_set_class(
        $element, array(
          'chinese-address',
        )
    );
  return '<div ' . drupal_attributes($element['#attributes']) . '>' . $element['#children'] . '</div>';
}

/**
 */
function _chinese_address_get_location($parentId = CHINESE_ADDRESS_ROOT_INDEX ,$excludeNone = false, $limitIds = []) {
  $query=db_select('chinese_address', 'c')->fields('c')->condition('c.parent_id ', $parentId);
  if($limitIds) 
    $result =$query->condition('c.id ', $limitIds, 'in');

   $result = $query->execute()->fetchAllKeyed(0, 2);
  if (!$excludeNone) {
    $result[CHINESE_ADDRESS_NULL_INDEX] = '--- 无----';
     ksort($result);
  }
  return $result;
}

 function _chinese_address_filter_none_option($address =array())
{
  if(isset($address[CHINESE_ADDRESS_NULL_INDEX]))
    unset($address[CHINESE_ADDRESS_NULL_INDEX]);
    return $address;
}
/**
 */
function _chinese_address_change_callback($form, $form_state) {
  $parents = $form_state['triggering_element']['#array_parents'];
  array_pop($parents);
    $element = drupal_array_get_nested_value($form, $parents);
    if (isset($element['_weight'])) {
      hide($element['_weight']);
    }
    return $element;

}

/**
 */
function _chinese_address_get_region_index($address) {
  if (isset($address['detail'])) {
    unset($address['detail']);
  }
  $result = db_select('chinese_address', 'c')->fields('c')->condition('id', $address, 'IN')->execute()->fetchAllKeyed(0, 2);
  return $result;
}

function chinese_address_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  $form['instance']['required']['#access'] = FALSE;  
}



/**
 *
 */
function _chinese_address_form_element_validate($element, &$form_state) {
  $values = $element['#value'];
  $values += array(
    'province' => CHINESE_ADDRESS_NULL_INDEX,
    'city' => CHINESE_ADDRESS_NULL_INDEX,
    'county' => CHINESE_ADDRESS_NULL_INDEX,
    'street' => CHINESE_ADDRESS_NULL_INDEX,
  );
  form_set_value($element, $values, $form_state);
}

/**
 */
function chinese_address_views_api() {
  return array(
    'api' => 3,
  );
}
